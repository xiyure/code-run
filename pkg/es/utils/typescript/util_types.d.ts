import { Component, VNode } from 'vue';
import { ConfigProviderContext } from 'element-plus';
import { VxeGlobalConfig as _VxeGlobalConfig } from 'vxe-pc-ui';
import { STYLE_MODULES, COMP_SIZES, LANGS, PLACEMENTS, DATE_TYPES, FORM_ITEM_TYPES } from '../../constant/common';
export type ContextConfig = {
    locale?: 'zh' | 'en';
    vxeGlobalConfig?: VxeGlobalConfig;
    ElementPlusOptions?: ConfigProviderContext;
    styleModule?: StyleModule;
    cssVariables?: Record<string, string>;
    size?: CompSize;
    props?: Record<string, any>;
    useDefaultFont?: boolean;
};
export type VxeGlobalConfig = _VxeGlobalConfig;
export type StyleModule = typeof STYLE_MODULES[number];
export type CompSize = typeof COMP_SIZES[number];
export type CssVariables = Record<string, string>;
export type Lang = typeof LANGS[number];
export type SlotsType = VNode | Component | (VNode | Component)[] | string;
export type Placement = typeof PLACEMENTS[number];
export type DateType = typeof DATE_TYPES[number];
export type FormItemType = typeof FORM_ITEM_TYPES[number];
export type BaseDataKey = string | number | boolean;
export type Arrayable<T> = T | T[];
export type IconType = string | Component;
export type MakeRequired<T, K extends keyof T> = Omit<T, K> & Required<Pick<T, K>>;
